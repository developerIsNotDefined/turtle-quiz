@mixin clearfix {
  &::after{
    content: "";
    display: table;
    clear: both;
  }
}

@mixin absoluteCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absoluteCover{
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin svgPseudoElements{
  background-position: center;
  background-repeat: no-repeat;
  background-origin: content-box;
  background-size: 80%;

  @include respond(xl){
    background-size: 50%;
  }

  @include respond(sm){
    background-size: 60%;
  }

  @include respond(xs){
    background-size: 80%;
  }
}

//MEDIA QUERY MANAGER
/*
0 - 576px: portrait phones
576 - 768px: landscape phones
768 - 992px: tablets
992 - 1200px: desktops
1200px: large desktops

$breakpoint argument choices:
- xs => 576px
- sm => 768px
- md => 992px
- lg => 1200px
- xl => 1200px +++

order is important. Desktop-first approach media queries should be applied from largest-device to smallest-device.
Otherwise undesired css-rules conflicts would be inevitable.
Use:
is max-width < 1200
is max-width < 992
is max-width < 768
is max-width < 576
*/

@mixin respond($breakpoint){
  // less than 576px
  @if $breakpoint == xs{
    @media only screen and (max-width: 576px) {
      @content
    }
  }

  // less than 768px
  @if $breakpoint == sm{
    @media only screen and (max-width: 768px) {
      @content
    }
  }

  // less than 992px
  @if $breakpoint == md{
    @media only screen and (max-width: 992px) {
      @content
    }
  }

  // less than 1200px
  @if $breakpoint == lg{
    @media only screen and (max-width: 1200px) {
      @content
    }
  }

  // 1200px +++
  @if $breakpoint == xl{
    @media only screen and (min-width: 1200px) {
      @content
    }
  }
}